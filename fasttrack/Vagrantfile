# ZonamaDev Vagrantfile for Fast Start Box
#
# Author: Lord Kator <lordkator@swgemu.com>
#
# Created: Fri Dec 25 17:03:17 EST 2015
#
#
##################################
# User config goes in config.yml #
##################################
dir = File.dirname(File.expand_path(__FILE__))

if File.exist?("#{dir}/config.yml")
  require 'yaml'

  user_config = YAML::load_file("#{dir}/config.yml")

  if user_config.has_key?('cores')
    cores = user_config['cores'].to_i
  end

  if user_config.has_key?('ram')
    ram = user_config['ram'].to_i
  end

  if user_config.has_key?('bridge')
    bridge = user_config['bridge']
  end
end

bridge ||= ""

# We recommend no less than 2 cores
cores ||= 2

if cores < 2
  cores = 2
end

# Recommend 768k per core for build success
ram ||= (cores * 768)

# We recommend no less than 2G of ram
if ram < 2048
  ram = 2048
end

## Check for required plugins
plugins_installed = false

[
  { :name => "vagrant-vbguest", :version => ">= 0.12.0" },
  { :name => "vagrant-reload", :version => ">= 0.0.1" }
].each do |plugin|
  if not Vagrant.has_plugin?(plugin[:name], plugin[:version])
    # raise "#{plugin[:name]} #{plugin[:version]} is required. Please run `vagrant plugin install #{plugin[:name]}`"
    system("bash -c 'set -x;cd ../..;vagrant plugin install #{plugin[:name]}'")
    plugins_installed = true
  end
end

# If we had to install anything they need to restart
if plugins_installed
  puts "Some plugins had to be installed, please re-run your command"
  exit 101
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  config.vm.hostname = "swgemudev"

  # Base Box
  config.vm.box = "zonama/zonamadev-deb-stretch"
  config.vm.box_version = "1.5.8"
  config.vm.box_check_update = true

  config.vm.network "forwarded_port", guest: 44480, host: 44480 # HTTP EmuYoda
  config.vm.network "forwarded_port", guest: 44443, host: 44443 # HTTPS EmuYoda
  config.vm.network "forwarded_port", guest: 44455, host: 44455 # StatusPort
  config.vm.network "forwarded_port", guest: 44453, host: 44453, protocol: 'udp' # LoginPort
  config.vm.network "forwarded_port", guest: 44462, host: 44462, protocol: 'udp' # PingPort
  config.vm.network "forwarded_port", guest: 44463, host: 44463, protocol: 'udp' # GalaxyPort

  if not bridge.empty?
    if bridge == "auto"
        config.vm.network "public_network", use_dhcp_assigned_default_route: true, auto_config: true
    else
        config.vm.network "public_network", use_dhcp_assigned_default_route: true, auto_config: true, bridge: bridge
    end
  end

  # This keeps windows hosts from blowing their brains out about rsync missing
  config.vm.synced_folder '.', '/vagrant', :disabled => true
  
  # Tell themn what to do next...
  config.vm.post_up_message = <<-UPMSG

      ##########################
      ## WELCOME TO SWGEMUDEV ##
      ##########################

      Your box is up now, you can use the console to work directly on the box.

      From this folder you can do:
          vagrant ssh     # ssh into the box
          vagrant halt    # shutdown the box
          vagrant destroy # destroy/delete the box WARNING: You will loose everything!
          vagrant snapshot save {name} # Create a named snapshot so you can restore later

      For more commands type: vagrant help

  UPMSG

  ###############
  ## Providers ##
  ###############

  zonamadev_url=%x[bash -c 'source #{File.dirname(__FILE__)}/../common/global.config;echo $ZONAMADEV_URL'].strip
  zonamadev_branch=%x[git rev-parse --abbrev-ref HEAD].strip
  [ "vmware_fusion", "vmware_workstation", "virtualbox" ].each do |provider|
    config.vm.provider provider do |v|
      v.name = "ZonamaDev-" + Time.now.to_i.to_s
      v.cpus = cores
      v.memory = ram
      v.gui = true

      if provider == "virtualbox"
        # Current repo and branch
        v.customize [ "guestproperty", "set", :id, "/ZonamaDev/url", zonamadev_url ]
        v.customize [ "guestproperty", "set", :id, "/ZonamaDev/branch", zonamadev_branch ]
        v.customize [ "guestproperty", "set", :id, "/ZonamaDev/upgrade", ENV['ZONAMADEV_UPGRADE'] || 'no' ]
        # Hint at a bigger video config
        v.customize ["modifyvm", :id, "--accelerate3d", "off"]
        v.customize ["modifyvm", :id, "--accelerate2dvideo", "off"]
        v.customize ["modifyvm", :id, "--vram", "128"]
        v.customize ["modifyvm", :id, "--audio", "null"]
        v.customize 'post-boot', ["controlvm", :id, "setvideomodehint", "1280", "800", "24"]
        # TODO need to test this more and see if we can optimize the network more, for now ethtool -i eth0 gro off seems to help
        # v.customize ["modifyvm", :id, "--nictype1", "virtio"]
        # v.customize ["modifyvm", :id, "--ioapic", "On"]
        # v.customize ["modifyvm", :id, "--audio", "coreaudio"]
        # v.customize ["modifyvm", :id, "--audiocontroller", "ac97"]
      end
    end
  end

  ###############
  ## PROVISION ##
  ###############

  # Copy local config into the host
  [ 'extras', '.bash_profile', '.bash_login', '.bash_logout', '.bashrc', '.vimrc', '.gitconfig', '.visual', '.gerrit_username', '.id_rsa', '.id_rsa.pub' ].each do |fn|
    src = "#{File.dirname(__FILE__)}/#{fn}"

    if File.exist?(src)
      dst = fn
      if src[0..5] == 'id_rsa'
        dst = ".ssh/" + src
      end
      config.vm.provision :file, source: src, destination: dst
    end
  end
end
#
# -*- mode: ruby -*-
# vi: ft=ruby sw=2
